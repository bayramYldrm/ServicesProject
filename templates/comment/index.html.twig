{% extends 'base.html.twig' %}

{% block body %}
    <div class="container mt-4">
        <div class="card">
            <div class="card-header bg-primary text-white text-center">
                <h1 class="mb-0">Comments</h1>
            </div>
            <div class="card-body">
                <!-- New Comment Form -->
                <div class="mb-4">
                    {{ form_start(newCommentForm) }}
                    {{ form_widget(newCommentForm) }}
                    <button class="btn btn-primary" type="submit">
                        <i class="bi bi-send"></i> Submit Comment
                    </button>
                    {{ form_end(newCommentForm) }}
                </div>

                <div class="comments">
                    {% if comments is not empty %}
                        <div class="comments-container">
                            {% for comment in comments %}
                                <div class="card mb-4 shadow-sm comment-card">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-3">
                                            <!-- User Icon -->
                                            <div class="user-icon me-3">
                                                <i class="bi bi-person-circle"></i>
                                            </div>
                                            <!-- User Info -->
                                            <div class="flex-grow-1">
                                                <h5 class="mb-1">{{ comment.user.username }}</h5>
                                                <small class="text-muted">{{ comment.createdAt|date('Y-m-d H:i') }}</small>
                                            </div>
                                            <!-- Time Ago -->
                                            <span class="text-muted ms-3 time-ago" data-time="{{ comment.createdAt|date('c') }}"></span>
                                        </div>

                                        <!-- Comment Content -->
                                        <div class="comment-content">
                                            <p>{{ comment.content }}</p>
                                        </div>

                                        <!-- Button Group -->
                                        <div class="btn-group mt-2" role="group">
                                            <!-- Reply Form Button -->
                                            <button class="btn btn-info" onclick="showCommentForm({{ loop.index }})">
                                                <i class="bi bi-reply-all"></i> Reply
                                            </button>

                                            <!-- Show Replies Button -->
                                            <a href="#" class="btn btn-secondary" data-bs-toggle="collapse" data-bs-target="#replies-{{ comment.id }}">
                                                <i class="bi bi-chat-left-text"></i> Show Replies
                                            </a>

                                            <!-- Delete Button for Comment -->
                                            <form action="{{ path('comment_delete', {'id': comment.id}) }}" method="post" style="display:inline;">
                                                <button class="btn btn-danger" type="submit">
                                                    <i class="bi bi-trash"></i> Delete
                                                </button>

                                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ comment.id) }}">
                                            </form>
                                        </div>

                                        <!-- Reply Form -->
                                        <div id="commentFormContainer{{ loop.index }}" class="reply-form-container mt-3" style="display: none;">
                                            <form action="{{ path('comment_reply', {'id': comment.id}) }}" method="POST">
                                                <div class="mb-3">
                                                    <textarea name="comment" placeholder="Write your reply..." class="form-control" rows="3" required></textarea>
                                                </div>
                                                <input type="hidden" name="comment_id" value="{{ comment.id }}">
                                                <button type="submit" class="btn btn-success">
                                                    <i class="bi bi-reply-all"></i> Submit Reply
                                                </button>
                                            </form>
                                        </div>

                                        <!-- Replies Collapse -->
                                        <div id="replies-{{ comment.id }}" class="collapse mt-2">
                                            {% if comment.replies is not empty %}
                                                <div class="replies-container">
                                                    {% for reply in comment.replies %}
                                                        <div class="reply-card mb-2 card">
                                                            <div class="card-body">
                                                                <p>{{ reply.content }}</p>
                                                                <small class="text-muted">by {{ reply.user.username }} on {{ reply.createdAt|date('Y-m-d H:i') }}</small>

                                                                <!-- Delete Button for Reply -->
                                                                <form action="{{ path('comment_reply_delete', {'id': reply.id}) }}" method="post" style="display:inline;">
                                                                    <button class="btn btn-danger btn-sm" type="submit">
                                                                        <i class="bi bi-trash"></i> Delete
                                                                    </button>
                                                                </form>
                                                            </div>
                                                        </div>
                                                    {% endfor %}
                                                </div>
                                            {% else %}
                                                <p class="text-muted">No replies found.</p>
                                            {% endif %}
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    {% else %}
                        <p class="text-muted">No comments found.</p>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript for toggling collapse and time ago functionality -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.39/moment-timezone-with-data.min.js"></script>
    <script>
        function showCommentForm(commentId) {
            var container = document.getElementById('commentFormContainer' + commentId);
            container.style.display = container.style.display === 'block' ? 'none' : 'block';
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Time Ago Functionality
            document.querySelectorAll('.time-ago').forEach(function (element) {
                const time = element.getAttribute('data-time');
                element.textContent = moment(time).fromNow();
            });

            // JavaScript for toggling collapse
            document.querySelectorAll('[data-bs-toggle="collapse"]').forEach(function (element) {
                element.addEventListener('click', function (e) {
                    e.preventDefault();
                    const targetId = this.getAttribute('data-bs-target');
                    const targetElement = document.querySelector(targetId);
                    if (targetElement) {
                        const bsCollapse = new bootstrap.Collapse(targetElement);
                        bsCollapse.toggle();
                    } else {
                        console.error('Target element not found:', targetId);
                    }
                });
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.like-button').forEach(button => {
                button.addEventListener('click', function() {
                    const commentId = this.dataset.commentId;

                    fetch(`/comment/${commentId}/like`, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    }).then(response => {
                        if (response.ok) {
                            // Başarılıysa beğeni sayısını güncelle
                            this.classList.toggle('liked');
                            const likesCount = this.nextElementSibling;
                            likesCount.textContent = parseInt(likesCount.textContent) + (this.classList.contains('liked') ? 1 : -1);
                        }
                    });
                });
            });

            document.querySelectorAll('.dislike-button').forEach(button => {
                button.addEventListener('click', function() {
                    const commentId = this.dataset.commentId;

                    fetch(`/comment/${commentId}/dislike`, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    }).then(response => {
                        if (response.ok) {
                            // Başarılıysa dislike sayısını güncelle
                            this.classList.toggle('disliked');
                            const dislikesCount = this.nextElementSibling;
                            dislikesCount.textContent = parseInt(dislikesCount.textContent) + (this.classList.contains('disliked') ? 1 : -1);
                        }
                    });
                });
            });

            document.querySelectorAll('.report-button').forEach(button => {
                button.addEventListener('click', function() {
                    const commentId = this.dataset.commentId;

                    fetch(`/comment/${commentId}/report`, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    }).then(response => {
                        if (response.ok) {
                            // Başarılıysa rapor sayısını güncelle
                            this.classList.toggle('reported');
                            const reportsCount = this.nextElementSibling;
                            reportsCount.textContent = parseInt(reportsCount.textContent) + (this.classList.contains('reported') ? 1 : -1);
                        }
                    });
                });
            });
        });
    </script>

    <style>
        .container {
            max-width: 800px;
            margin: auto;
        }

        .card {
            background-color: #f8f9fa;
        }

        .card-header {
            background-color: #007bff;
            color: #fff;
        }

        .comment-card {
            border-left: 3px solid #007bff;
        }

        .comment-content {
            border: 1px solid #dee2e6;
            padding: 1rem;
            border-radius: .25rem;
            background-color: #f1f1f1;
        }

        .replies {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: .25rem;
            padding: 1rem;
            overflow-y: auto; /* Kaydırma çubuğu */
            max-height: 300px; /* Yüksekliği sınırlandır */
        }

        .reply-form-container {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: .25rem;
            padding: 1rem;
            overflow-y: auto; /* Kaydırma çubuğu */
        }

        .btn-info, .btn-secondary {
            display: inline-block;
        }

        .btn-group {
            display: flex;
            gap: 0.5rem; /* Butonlar arasındaki boşluğu ayarlayın */
        }

        .btn-group .btn {
            margin-right: 0; /* Sağdaki boşluğu sıfırla */
        }

        .comments-container {
            max-height: 500px; /* Yüksekliği sınırlandır */
            overflow-y: auto; /* Kaydırma çubuğu */
        }

        .comment-card, .card-body {
            background-color: #fff;
        }

        .user-icon {
            font-size: 1.5rem;
            color: #007bff;
        }

        .time-ago {
            font-size: 0.9rem;
        }

        .replies-container {
            border-top: 1px solid #dee2e6;
            padding-top: 1rem;
            overflow-y: auto; /* Kaydırma çubuğu */
            max-height: 200px; /* Yanıtlar için yüksekliği sınırlandır */
        }

        .reply-card {
            border-left: 3px solid #007bff;
            background-color: #f8f9fa;
        }

        .reply-card .card-body {
            padding: 1rem;
        }

        .replies-container p {
            margin-bottom: 0.5rem;
        }

        .form-group button[type="submit"] {
            display: none;
        }

    </style>
{% endblock %}
